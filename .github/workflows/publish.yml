name: Build & publish

# Controls when the action will run. 
on:
  push:
    branches:
      - main

# Allows you to run this workflow manually from the Actions tab
# on: workflow_dispatch
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: setup node 18.16.0
        uses: actions/setup-node@v3
        with:
          node-version: 18.16.0
      - name: build frontend
        run: |
          cd frontend
          npm i
          npm run build
      - name: build backend
        run: |
          cd backend
          npm i
          npm run build
      - name: rsync frontend (.next)
        uses: snack-dev/rsync-deployments@4.1
        with:
          switches: -avzr
          path: frontend/.next/
          remote_path: /var/www/frontend/.next/
          remote_host: tesis.app
          remote_port: 22
          remote_user: ubuntu
          remote_key: ${{ secrets.DEPLOY_KEY }}
      - name: rsync frontend (package.json)
        uses: snack-dev/rsync-deployments@4.1
        with:
          switches: -avzr
          path: frontend/package.json
          remote_path: /var/www/frontend/
          remote_host: tesis.app
          remote_port: 22
          remote_user: ubuntu
          remote_key: ${{ secrets.DEPLOY_KEY }}
      - name: rsync frontend (package-lock.json)
        uses: snack-dev/rsync-deployments@4.1
        with:
          switches: -avzr --exclude node_modules/
          path: frontend/package-lock.json
          remote_path: /var/www/frontend/
          remote_host: tesis.app
          remote_port: 22
          remote_user: ubuntu
          remote_key: ${{ secrets.DEPLOY_KEY }}
      - name: rsync backend
        uses: snack-dev/rsync-deployments@4.1
        with:
          switches: -avzr --exclude node_modules/ src/ test/
          path: backend/
          remote_path: /var/www/backend/
          remote_host: tesis.app
          remote_port: 22
          remote_user: ubuntu
          remote_key: ${{ secrets.DEPLOY_KEY }}
      - name: reboot frontend
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: tesis.app
          username: ubuntu
          key: ${{ secrets.DEPLOY_KEY }}
          script: |
            cd /var/www/frontend
            npm i --production
            pm2 restart "frontend"
      - name: reboot backend
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: tesis.app
          username: ubuntu
          key: ${{ secrets.DEPLOY_KEY }}
          script: |
            cd /var/www/backend
            npm i --production
            pm2 restart "backend"